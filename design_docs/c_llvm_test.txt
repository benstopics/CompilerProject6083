#include <stdio.h>

int global_int = 0;

int main()
{
 int a;
 
 printf("Enter an integer\n");
 scanf("%d", &a);
 
 printf("Integer that you have entered is %d\n", a);
 
 int neg_a = -a;
 
 printf("The negated value of your integer is %d\n", neg_a);
 
 float b = 5.0f + a;
 float neg_b = -b;
 
 char* str = "test";
 char* str2 = str;
 
 return 0;
}

----------------------------------------------

@global_int = global i32 0, align 4
@.str = private unnamed_addr constant [18 x i8] c"Enter an integer\0A\00", align 1
@.str1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str2 = private unnamed_addr constant [37 x i8] c"Integer that you have entered is %d\0A\00", align 1
@.str3 = private unnamed_addr constant [41 x i8] c"The negated value of your integer is %d\0A\00", align 1
@.str4 = private unnamed_addr constant [5 x i8] c"test\00", align 1

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %1 = alloca i32, align 4
  %a = alloca i32, align 4
  %neg_a = alloca i32, align 4
  %b = alloca float, align 4
  %neg_b = alloca float, align 4
  %str = alloca i8*, align 8
  %str2 = alloca i8*, align 8
  store i32 0, i32* %1
  %2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str, i32 0, i32 0))
  %3 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), i32* %a)
  %4 = load i32* %a, align 4
  %5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str2, i32 0, i32 0), i32 %4)
  %6 = load i32* %a, align 4
  %7 = sub nsw i32 0, %6
  store i32 %7, i32* %neg_a, align 4
  %8 = load i32* %neg_a, align 4
  %9 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str3, i32 0, i32 0), i32 %8)
  %10 = load i32* %a, align 4
  %11 = sitofp i32 %10 to float
  %12 = fadd float 5.000000e+00, %11
  store float %12, float* %b, align 4
  %13 = load float* %b, align 4
  %14 = fsub float -0.000000e+00, %13
  store float %14, float* %neg_b, align 4
  store i8* getelementptr inbounds ([5 x i8]* @.str4, i32 0, i32 0), i8** %str, align 8
  %15 = load i8** %str, align 8
  store i8* %15, i8** %str2, align 8
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

declare i32 @__isoc99_scanf(i8*, ...) #1